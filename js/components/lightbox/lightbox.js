import{logEvent}from"../../utils/utils.js";import domSelectors from"../../config/domSelectors.js";import{handleLightboxNavigation}from"../../events/keyboardHandler.js";let currentIndex=0,mediaList=[],globalFolderName="",isVideoLightboxOpen=!1,isTransitioning=!1,lastDirection="right";import{sorted}from"../sort/sortlogic.js";let exitClass="";export function initLightbox(e,t){if(logEvent("init","D√©but de l'initialisation de la lightbox.",{mediaArray:e}),!Array.isArray(e)||0===e.length)return logEvent("warn","Le tableau de m√©dias est vide ou invalide."),mediaList=[],void(globalFolderName=t||"");if("string"!=typeof t||""===t.trim())throw logEvent("error","Nom du dossier (folderName) invalide ou manquant.",{folderName:t}),new Error("Le nom du dossier doit √™tre une cha√Æne de caract√®res non vide.");try{mediaList=[...e],globalFolderName=t,currentIndex=0,lastDirection="right",isTransitioning=!1,logEvent("success","Lightbox initialis√©e avec succ√®s.",{mediaList:mediaList})}catch(e){throw logEvent("error","Erreur lors de l'initialisation de la lightbox.",{error:e}),new Error("Erreur d'initialisation de la lightbox : "+e.message)}}export function openLightbox(e,t,i){logEvent("action",` Tentative d'ouverture de la lightbox pour l'index ${e}.`,{index:e});try{const{lightboxContainer:n}=domSelectors.lightbox;if(!n)throw new Error(" Conteneur principal de la lightbox introuvable.");Array.isArray(t)&&t.length>0&&(mediaList=[...t],globalFolderName=i),currentIndex=e,updateLightboxContent(mediaList[currentIndex],globalFolderName,"right"),n.classList.remove("hidden"),n.setAttribute("aria-hidden","false"),document.querySelector(".lightbox-overlay")?.addEventListener("click",closeLightbox),document.__lightboxKeyboardListener||(document.addEventListener("keydown",handleLightboxNavigation),document.__lightboxKeyboardListener=!0),logEvent("success",`Lightbox ouverte avec succ√®s pour l'index ${currentIndex}.`)}catch(e){logEvent("error",` Erreur lors de l'ouverture de la lightbox : ${e.message}`,{error:e})}}export function closeLightbox(){logEvent("action","Fermeture de la lightbox et r√©initialisation du contenu.");try{const{lightboxContainer:e,lightboxMediaContainer:t,lightboxCaption:i}=domSelectors.lightbox;if(!e)throw new Error("Conteneur principal de la lightbox introuvable.");const n=t.querySelector(".active-media");n&&(n.remove(),logEvent("info","üóë M√©dia actuel supprim√© de la lightbox.")),i&&(i.textContent="",logEvent("info"," Caption de la lightbox r√©initialis√©e.")),isVideoLightboxOpen&&(isVideoLightboxOpen=!1,logEvent("info","R√©initialisation de isVideoLightboxOpen apr√®s fermeture.")),setTimeout((()=>{initializeVideoHandlers(),logEvent("info"," R√©activation des vid√©os apr√®s fermeture de la lightbox.")}),300),currentIndex=0,mediaList=[],globalFolderName="",e.classList.add("hidden"),e.setAttribute("aria-hidden","true"),logEvent("success","Lightbox ferm√©e, vid√©os r√©activ√©es et touches clavier fonctionnelles.")}catch(e){logEvent("error",` Erreur lors de la fermeture de la lightbox : ${e.message}`,{error:e})}}function handleAnimationEnd(){try{mediaElement.removeEventListener("animationend",handleAnimationEnd),callback(),logEvent("success",`Animation de sortie termin√©e avec effet : ${exitClass}`)}catch(e){logEvent("error",`Erreur dans la fonction de rappel apr√®s l'animation : ${e.message}`,{callbackError:e})}}function animateMediaExitLeft(e,t){try{if(!(e instanceof HTMLElement))throw new Error("L'√©l√©ment m√©dia est invalide ou non d√©fini.");if("function"!=typeof t)throw new Error("Le param√®tre `callback` doit √™tre une fonction valide.");const i=sorted?"lightbox-exit-right":"lightbox-exit-left";e.classList.remove("lightbox-exit-left","lightbox-exit-right"),e.classList.add(i),e.addEventListener("animationend",(()=>{try{e.removeEventListener("animationend",handleAnimationEnd),t(),logEvent("success",`Animation de sortie termin√©e avec effet : ${i}`)}catch(e){logEvent("error",`Erreur dans la fonction de rappel apr√®s l'animation : ${e.message}`,{callbackError:e})}}),{once:!0}),logEvent("info",`Animation de sortie lanc√©e avec effet : ${i}`)}catch(e){logEvent("error",`Erreur lors de l'animation de sortie : ${e.message}`,{error:e})}}function animateMediaExitRight(e,t){try{if(!(e instanceof HTMLElement))throw new Error("L'√©l√©ment m√©dia est invalide ou non d√©fini.");if("function"!=typeof t)throw new Error("Le param√®tre `callback` doit √™tre une fonction valide.");const i=sorted?"lightbox-exit-left":"lightbox-exit-right";e.classList.remove("lightbox-exit-left","lightbox-exit-right"),e.classList.add(i),e.addEventListener("animationend",(function i(){try{e.removeEventListener("animationend",i),t(),logEvent("success",`Animation de sortie termin√©e avec effet : ${exitClass}`)}catch(e){logEvent("error",`Erreur dans la fonction de rappel apr√®s l'animation : ${e.message}`,{callbackError:e})}})),logEvent("info",`Animation de sortie lanc√©e avec effet : ${i}`)}catch(e){logEvent("error",`Erreur lors de l'animation de sortie : ${e.message}`,{error:e})}}function insertNewMedia(e,t,i){try{if(!e||"object"!=typeof e||!e.image&&!e.video)throw new Error("Le param√®tre `media` est invalide ou ne contient ni image ni vid√©o.");if("string"!=typeof t||""===t.trim())throw new Error("Le chemin du dossier `folderPath` est invalide.");const{lightboxMediaContainer:n,lightboxCaption:o}=domSelectors.lightbox;if(!n||!o)throw new Error("Les √©l√©ments DOM de la lightbox sont introuvables.");let r=document.createElement(e.image?"img":"video");r.classList.add("lightbox-media","active-media"),e.image?(r.src=`${t}${e.image}`,r.alt=e.title||"Image sans titre",r.loading="lazy"):e.video&&(r.src=`${t}${e.video}`,r.controls=!0,r.autoplay=!0,r.muted=!1),n.appendChild(r),o.textContent=e.title||"Sans titre",logEvent("success","M√©dia ins√©r√© avec succ√®s dans la lightbox.",{media:e,direction:i})}catch(e){logEvent("error",`Erreur lors de l'insertion du m√©dia dans la lightbox : ${e.message}`,{error:e})}}export function showNextMedia(){try{if(!Array.isArray(mediaList)||0===mediaList.length)throw new Error("Aucun m√©dia disponible pour la navigation.");if("string"!=typeof globalFolderName)throw new Error("Nom du dossier invalide ou non d√©fini.");if(isTransitioning)return void logEvent("warn","‚è≥ Tentative de navigation alors qu'une transition est en cours.");isTransitioning=!0,document.removeEventListener("keydown",handleLightboxNavigation),currentIndex=sorted?(currentIndex-1+mediaList.length)%mediaList.length:(currentIndex+1)%mediaList.length,updateLightboxContent(mediaList[currentIndex],globalFolderName,"right",(()=>{isTransitioning=!1,document.addEventListener("keydown",handleLightboxNavigation),logEvent("success","Transition termin√©e, navigation r√©activ√©e.")})),logEvent("success",` Navigation vers le m√©dia suivant. Index actuel : ${currentIndex}`)}catch(e){logEvent("error",` Erreur lors de la navigation vers le m√©dia suivant : ${e.message}`,{error:e})}}export function showPreviousMedia(){try{if(!Array.isArray(mediaList)||0===mediaList.length)throw new Error("Aucun m√©dia disponible pour la navigation.");if("string"!=typeof globalFolderName)throw new Error("Nom du dossier invalide ou non d√©fini.");if(isTransitioning)return void logEvent("warn"," Tentative de navigation alors qu'une transition est en cours.");isTransitioning=!0,document.removeEventListener("keydown",handleLightboxNavigation),currentIndex=sorted?(currentIndex+1)%mediaList.length:(currentIndex-1+mediaList.length)%mediaList.length,updateLightboxContent(mediaList[currentIndex],globalFolderName,"left",(()=>{document.addEventListener("keydown",handleLightboxNavigation),logEvent("success"," Transition termin√©e, navigation r√©activ√©e."),isTransitioning=!1})),logEvent("success",` Navigation vers le m√©dia pr√©c√©dent. Index actuel : ${currentIndex}`)}catch(e){logEvent("error",` Erreur lors de la navigation vers le m√©dia pr√©c√©dent : ${e.message}`,{error:e})}}function updateLightboxContent(e,t,i,n){try{if(logEvent("debug",` Mise √† jour de la lightbox : ${currentIndex} / ${mediaList.length}`,{media:e,currentIndex:currentIndex,folderName:t,direction:i}),"right"!==i&&"left"!==i)throw new Error(`Direction "${i}" non valide. Attendu : "right" ou "left".`);const{lightboxMediaContainer:o}=domSelectors.lightbox;if(!o)throw new Error("Conteneur de m√©dias de la lightbox introuvable.");const r=o.querySelector(".active-media"),a=`../../../assets/photographers/${t}/`;r?("right"===i?animateMediaExitLeft:animateMediaExitRight)(r,(()=>{r.remove(),insertNewMedia(e,a,i),n&&"function"==typeof n&&n()})):(insertNewMedia(e,a,i),n&&"function"==typeof n&&n()),logEvent("success",` M√©dia mis √† jour avec succ√®s. Direction : ${i}`)}catch(e){logEvent("error",` Erreur lors de la mise √† jour du m√©dia dans la lightbox : ${e.message}`,{error:e})}}export function initializeVideoHandlers(){logEvent("init"," Initialisation des vid√©os de la galerie...");const e=document.querySelectorAll(".media-item video");e.length?(e.forEach((e=>{e.removeAttribute("controls"),e.addEventListener("click",(t=>{if(t.preventDefault(),t.stopPropagation(),isVideoLightboxOpen)return void logEvent("warn"," Tentative de r√©ouverture alors qu'une vid√©o est d√©j√† ouverte.");logEvent("info"," Clic sur une vid√©o, ouverture de la lightbox...",{video:e});const i=e.closest(".gallery-item");if(!i)return void logEvent("error"," Impossible de r√©cup√©rer .gallery-item pour la vid√©o.");const n=parseInt(i.dataset.index,10);isNaN(n)?logEvent("error"," Index de la vid√©o introuvable."):(isVideoLightboxOpen=!0,logEvent("success",` Ouverture de la lightbox vid√©o √† l'index ${n}.`),openLightbox(n,window.mediaList,window.globalFolderName))}))})),logEvent("success"," Initialisation des vid√©os termin√©e avec succ√®s.")):logEvent("warn","Aucune vid√©o d√©tect√©e dans la galerie.")}