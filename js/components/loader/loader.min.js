import domSelectors from"../../config/domSelectors.min.js";import{logEvent}from"../../utils/utils.min.js";const messages=["Nous commençons la vérification...","Contrôle du prénom...","Contrôle du nom...","Vérification de l'email...","Analyse du message...","Envoi en cours..."];let progress=0,messageIndex=0;export function showLoader(){try{const{loader:e,loaderText:r,progressBar:o,progressPercentage:s}=domSelectors;if(!(e&&r&&o&&s))throw new Error("Un ou plusieurs éléments du loader sont introuvables.");e.classList.add("loader-active");const t=setInterval((()=>{try{messageIndex<messages.length&&(r.textContent=messages[messageIndex],messageIndex++),progress+=100/messages.length,o.style.width=`${progress}%`,s.textContent=`${Math.round(progress)}%`,progress>=100&&(clearInterval(t),setTimeout((()=>{hideLoader(),resetLoader()}),500))}catch(e){logEvent("error",`Erreur lors de la mise à jour du loader : ${e.message}`,{error:e}),clearInterval(t)}}),1e3);logEvent("info","Affichage du loader en cours...")}catch(e){logEvent("error",`Erreur lors de l'affichage du loader : ${e.message}`,{error:e})}}export function hideLoader(){try{const{loader:e}=domSelectors;if(!e)throw new Error("Élément `#loader` introuvable dans le DOM.");e.classList.remove("loader-active"),logEvent("success","Loader caché avec succès.")}catch(e){logEvent("error",`Erreur lors du masquage du loader : ${e.message}`,{error:e})}}export function resetLoader(){try{const{loaderText:e,progressBar:r,progressPercentage:o}=domSelectors;if(!e||!r||!o)throw new Error("Un ou plusieurs éléments du loader sont introuvables.");e.textContent="Nous commençons la vérification...",r.style.width="0%",o.textContent="0%",logEvent("success","Loader réinitialisé avec succès.")}catch(e){logEvent("error",`Erreur lors de la réinitialisation du loader : ${e.message}`,{error:e})}}